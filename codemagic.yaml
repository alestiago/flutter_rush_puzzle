workflows:
  default-workflow:
    name: iOS and Android Release
    max_build_duration: 30
    environment:
      groups:
        - play_store
        - apple_store
        - personal_data
      flutter: stable
      xcode: latest
      cocoapods: default
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
      tag_patterns:
        - pattern: '*'
          include: true
    scripts:
      - |
        # set up key.properties
        echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
        cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
        storePassword=$FCI_KEYSTORE_PASSWORD
        keyPassword=$FCI_KEY_PASSWORD
        keyAlias=$FCI_KEY_ALIAS
        storeFile=/tmp/keystore.keystore
        EOF
      - |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - flutter packages pub get
      - flutter build appbundle --release  --flavor production --target lib/main_profile.dart
      - find . -name "Podfile" -execdir pod install \;
      - keychain initialize
      - app-store-connect fetch-signing-files "app.flutter.rushpuzzle" --type IOS_APP_STORE --platform=IOS --create
      - keychain add-certificates
      - xcode-project use-profiles
      - flutter build ipa --export-options-plist=/Users/builder/export_options.plist  --flavor
        production  --target lib/main_profile.dart
      - |
        # Publish only for tag builds
        if [ -z ${CM_TAG} ]; then
           echo "Not a tag build will not publish GitHub release"
        exit 0
        fi

        gh release upload "${CM_TAG}" \
            build/**/outputs/bundle/**/*.aab  \
            build/ios/ipa/*.ipa
    artifacts:
      - build/**/outputs/apk/**/*.apk
      - build/**/outputs/bundle/**/*.aab
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - '*.snap'
      - build/windows/**/*.msix
      - build/windows/**/*.exe
      - build/macos/**/*.pkg
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - git@jaimeblasco.com
      google_play:
        credentials: $GOOGLE_PLAY_CREDENTIALS
        track: beta
        submit_as_draft: true
      app_store_connect:
        api_key: $APPLE_STORE_CONNECT_API_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        submit_to_app_store: false

  macos-workflow:
    name: MacOS Release
    max_build_duration: 30
    environment:
      groups:
        - play_store
        - apple_store
        - personal_data
      flutter: stable
      xcode: latest
      cocoapods: default
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
      tag_patterns:
        - pattern: '*'
          include: true
    scripts:
      - flutter packages pub get
      - flutter config --enable-web
      - flutter config --enable-linux-desktop
      - flutter config --enable-macos-desktop
      - find . -name "Podfile" -execdir pod install \;
      - keychain initialize
      - app-store-connect fetch-signing-files "app.flutter.rushpuzzle"  --type MAC_APP_STORE --platform MAC_OS  --create --certificate-key "$MAC_CERTIFICATE_PRIVATE_KEY"
      - app-store-connect create-certificate --type MAC_INSTALLER_DISTRIBUTION --certificate-key "$MAC_CERTIFICATE_PRIVATE_KEY" --save || \
          app-store-connect list-certificates --type MAC_INSTALLER_DISTRIBUTION --certificate-key "$MAC_CERTIFICATE_PRIVATE_KEY" --save                
      - keychain add-certificates
      - xcode-project use-profiles
      - |
        find . -name "Podfile" -execdir pod install \;
      - |
        # build macos
        flutter build macos --release --target lib/main_profile.dart
      - |    
        # create macos package
        set -x

          # Command to find the path to your generated app
          APP_NAME=$(find $(pwd) -name "*.app")
          cd $(dirname "$APP_NAME")
          PACKAGE_NAME=$(basename "$APP_NAME" .app).pkg

          # Create an unsigned package
          xcrun productbuild --component "$APP_NAME" /Applications/ unsigned.pkg

          # Find the installer certificate commmon name in keychain
          INSTALLER_CERT_NAME=$(keychain list-certificates \
            | jq '.[]
              | select(.common_name
              | contains("Mac Developer Installer"))
              | .common_name' \
            | xargs)

          # Sign the package
          xcrun productsign --sign "$INSTALLER_CERT_NAME" unsigned.pkg "$PACKAGE_NAME"          
      - |
        # Publish only for tag builds
        if [ -z ${CM_TAG} ]; then
           echo "Not a tag build will not publish GitHub release"
        exit 0
        fi

        gh release upload "${CM_TAG}" \
            build/macos/**/*.app
    artifacts:
      - build/**/outputs/apk/**/*.apk
      - build/**/outputs/bundle/**/*.aab
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - build/web.zip
      - '*.snap'
      - build/windows/**/*.msix
      - build/windows/**/*.exe
      - build/macos/**/*.pkg
      - build/macos/**/*.app
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - git@jaimeblasco.com
      app_store_connect:
        api_key: $APPLE_STORE_CONNECT_API_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        submit_to_app_store: false

  windows-workflow:
    name: Windows release
    instance_type: windows_x2
    max_build_duration: 30
    environment:
      groups:
        - windows-signing 
        - personal_data
      flutter: stable
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
      tag_patterns:
        - pattern: '*'
          include: true
    scripts:
      - choco install gh
      - flutter packages pub get
      - flutter config --enable-windows-desktop
      - flutter build windows
      - flutter pub run msix:create --store --publisher=CN=3A6E7B55-DB95-449E-9605-3397E2C34CAC --identity-name=53278JaimeBlascoAndrs.RushApp
      - |
        gh release upload $env:CM_TAG build\windows\runner\Release\rush_hour_puzzle.msix build\windows\runner\Release\rush_hour_puzzle.exe
    artifacts:
      - build/windows/**/*.msix
    publishing:
      partner_center:
        store_id: $AZ_STORE_ID # <-- You can find the `store_id` inside your Partner Center app by going to [Product management > Product Identity].
        tenant_id: $AZ_TENANT_ID # <-- You will get `tenant_id` from the Azure AD Overview page.
        client_id: $AZ_CLIENT_ID # <-- You will also get `client_id` from the Azure AD Overview page.
        client_secret: $PARTNER_CLIENT_SECRET # <-- `client_secret` is retrieved from the application environment variable
      email:
        recipients:
          - git@jaimeblasco.com 

  web-workflow:
    name: Deploy web
    max_build_duration: 30
    environment:
      groups:
        - play_store
        - apple_store
        - personal_data
      flutter: stable
      xcode: latest
      cocoapods: default
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
      tag_patterns:
        - pattern: '*'
          include: true
    scripts:
      - flutter packages pub get
      - flutter config --enable-web
      - |
        # build web
        flutter build web --release --web-renderer html --target lib/main_profile.dart
        cd build/web
        7z a -r ../web.zip ./*
        cd ../../
      - |
        # Publish only for tag builds
        if [ -z ${CM_TAG} ]; then
           echo "Not a tag build will not publish GitHub release"
        exit 0
        fi

        gh release upload "${CM_TAG}" \
            build/web.zip
    artifacts:
      - build/web.zip
    publishing:
      email:
        recipients:
          - git@jaimeblasco.com